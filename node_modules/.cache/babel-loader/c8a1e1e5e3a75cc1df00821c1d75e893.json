{"ast":null,"code":"import { useState } from \"react\"; // https://github.com/andrewbranch/react-use-hover\n\nexport default function useHover({\n  mouseEnterDelayMS = 200,\n  mouseLeaveDelayMS = 0\n} = {}) {\n  const [isHovering, setIsHovering] = useState(false);\n  let mouseEnterTimer;\n  let mouseOutTimer;\n  return [isHovering, {\n    onMouseEnter: () => {\n      clearTimeout(mouseOutTimer);\n      mouseEnterTimer = setTimeout(() => setIsHovering(true), mouseEnterDelayMS);\n    },\n    onMouseLeave: () => {\n      clearTimeout(mouseEnterTimer);\n      mouseOutTimer = setTimeout(() => setIsHovering(false), mouseLeaveDelayMS);\n    }\n  }];\n}","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/foundations/hooks/useHover.ts"],"names":["useState","useHover","mouseEnterDelayMS","mouseLeaveDelayMS","isHovering","setIsHovering","mouseEnterTimer","mouseOutTimer","onMouseEnter","clearTimeout","setTimeout","onMouseLeave"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AAYA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,iBAAiB,GAAG,GADW;AAE/BC,EAAAA,iBAAiB,GAAG;AAFW,IAGZ,EAHN,EAGiC;AAC9C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAIM,eAAJ;AACA,MAAIC,aAAJ;AACA,SAAO,CACLH,UADK,EAEL;AACEI,IAAAA,YAAY,EAAE,MAAM;AAClBC,MAAAA,YAAY,CAACF,aAAD,CAAZ;AACAD,MAAAA,eAAe,GAAGI,UAAU,CAC1B,MAAML,aAAa,CAAC,IAAD,CADO,EAE1BH,iBAF0B,CAA5B;AAID,KAPH;AAQES,IAAAA,YAAY,EAAE,MAAM;AAClBF,MAAAA,YAAY,CAACH,eAAD,CAAZ;AACAC,MAAAA,aAAa,GAAGG,UAAU,CACxB,MAAML,aAAa,CAAC,KAAD,CADK,EAExBF,iBAFwB,CAA1B;AAID;AAdH,GAFK,CAAP;AAmBD","sourcesContent":["import { useState } from \"react\";\n\n// https://github.com/andrewbranch/react-use-hover\n\nexport interface UseHoverOptions {\n  mouseEnterDelayMS?: number;\n  mouseLeaveDelayMS?: number;\n}\n\nexport type HoverProps = Pick<\n  React.HTMLAttributes<HTMLElement>,\n  \"onMouseEnter\" | \"onMouseLeave\"\n>;\n\nexport default function useHover({\n  mouseEnterDelayMS = 200,\n  mouseLeaveDelayMS = 0\n}: UseHoverOptions = {}): [boolean, HoverProps] {\n  const [isHovering, setIsHovering] = useState(false);\n  let mouseEnterTimer: number | undefined;\n  let mouseOutTimer: number | undefined;\n  return [\n    isHovering,\n    {\n      onMouseEnter: () => {\n        clearTimeout(mouseOutTimer);\n        mouseEnterTimer = setTimeout(\n          () => setIsHovering(true),\n          mouseEnterDelayMS\n        );\n      },\n      onMouseLeave: () => {\n        clearTimeout(mouseEnterTimer);\n        mouseOutTimer = setTimeout(\n          () => setIsHovering(false),\n          mouseLeaveDelayMS\n        );\n      }\n    }\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}