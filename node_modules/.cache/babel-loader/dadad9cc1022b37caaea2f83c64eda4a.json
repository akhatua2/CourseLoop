{"ast":null,"code":"var _jsxFileName = \"/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/features/gifs/GifInput/GifInput.tsx\";\nimport React, { useState, useCallback, useRef } from \"react\";\nimport useClickOutside from \"foundations/hooks/useClickOutside\";\nimport { GifPicker } from \"../GifPicker\";\nimport { GiphyIcon } from \"foundations/components/icons/GiphyIcon\";\nimport { Wrapper, Dialog, GifButton } from \"./GifInput.style\";\n\nconst GifInput = ({\n  onSelection\n}) => {\n  const [showPicker, setPickerState] = useState(false);\n  const picker = useRef(null);\n  const dismissPicker = useCallback(() => {\n    setPickerState(false);\n  }, [setPickerState]);\n  useClickOutside([picker], dismissPicker);\n\n  const togglePicker = () => {\n    setPickerState(!showPicker);\n  };\n\n  const onSelected = (gif, query) => {\n    onSelection(gif, query);\n    dismissPicker();\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    ref: picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, showPicker && /*#__PURE__*/React.createElement(GifPicker, {\n    onSelected: onSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(GifButton, {\n    onClick: togglePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GiphyIcon, {\n    title: \"Open gif selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport { GifInput };","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/features/gifs/GifInput/GifInput.tsx"],"names":["React","useState","useCallback","useRef","useClickOutside","GifPicker","GiphyIcon","Wrapper","Dialog","GifButton","GifInput","onSelection","showPicker","setPickerState","picker","dismissPicker","togglePicker","onSelected","gif","query"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,SAAT,QAA6C,cAA7C;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA2C,kBAA3C;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AACnD,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAMa,MAAM,GAAGX,MAAM,CAAiB,IAAjB,CAArB;AAEA,QAAMY,aAAa,GAAGb,WAAW,CAAC,MAAM;AACtCW,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFgC,EAE9B,CAACA,cAAD,CAF8B,CAAjC;AAIAT,EAAAA,eAAe,CAAC,CAACU,MAAD,CAAD,EAAWC,aAAX,CAAf;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzBH,IAAAA,cAAc,CAAC,CAACD,UAAF,CAAd;AACD,GAFD;;AAIA,QAAMK,UAA6B,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpDR,IAAAA,WAAW,CAACO,GAAD,EAAMC,KAAN,CAAX;AACAJ,IAAAA,aAAa;AACd,GAHD;;AAKA,sBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAED,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,UAAU,iBAAI,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEK,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CADF,eAEE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAED,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CA3BD;;AA6BA,SAASN,QAAT","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport useClickOutside from \"foundations/hooks/useClickOutside\";\nimport { GifPicker, onSelectedHandler } from \"../GifPicker\";\nimport { GiphyIcon } from \"foundations/components/icons/GiphyIcon\";\nimport { Wrapper, Dialog, GifButton } from \"./GifInput.style\";\n\ninterface GifInputProps {\n  onSelection: onSelectedHandler;\n}\n\nconst GifInput = ({ onSelection }: GifInputProps) => {\n  const [showPicker, setPickerState] = useState(false);\n  const picker = useRef<HTMLDivElement>(null);\n\n  const dismissPicker = useCallback(() => {\n    setPickerState(false);\n  }, [setPickerState]);\n\n  useClickOutside([picker], dismissPicker);\n\n  const togglePicker = () => {\n    setPickerState(!showPicker);\n  };\n\n  const onSelected: onSelectedHandler = (gif, query) => {\n    onSelection(gif, query);\n    dismissPicker();\n  };\n\n  return (\n    <Wrapper ref={picker}>\n      <Dialog>{showPicker && <GifPicker onSelected={onSelected} />}</Dialog>\n      <GifButton onClick={togglePicker}>\n        <GiphyIcon title=\"Open gif selector\" />\n      </GifButton>\n    </Wrapper>\n  );\n};\n\nexport { GifInput };\n"]},"metadata":{},"sourceType":"module"}