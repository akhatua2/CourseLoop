{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { currentConversationStateReducer } from \"features/currentConversation/currentConversationModel\";\nimport { LayoutStateReducer } from \"features/layout/LayoutReducer\";\nimport { UsersReducer } from \"features/users/userModel\";\nimport { AuthenticationStateReducer } from \"features/authentication/authenticationModel\";\nimport { MessageStateReducer } from \"features/messages/messageModel\";\nimport { TypingIndicatorStateReducer } from \"features/typingIndicator/typingIndicatorModel\";\nimport { conversationStateReducer } from \"features/conversations/conversationModel\";\nimport { JoinedConversationsStateReducer } from \"features/joinedConversations/joinedConversationModel\";\nimport { ConversationDraftStateReducer } from \"features/joinedConversations/DraftsModel\";\nimport { ConversationMembersStateReducer } from \"features/conversationMembers/conversationMemberModel\";\nimport { NetworkStatusReducer } from \"features/currentUser/networkStatusModel\";\nimport { MemberPresenceReducer } from \"features/memberPresence/memberPresenceModel\";\n/**\n * Combine all of the reducers in this application\n */\n\nconst rootReducer = combineReducers({\n  layout: LayoutStateReducer,\n  networkStatus: NetworkStatusReducer,\n  users: UsersReducer,\n  conversations: conversationStateReducer,\n  joinedConversations: JoinedConversationsStateReducer,\n  drafts: ConversationDraftStateReducer,\n  conversationMembers: ConversationMembersStateReducer,\n  memberPresence: MemberPresenceReducer,\n  messages: MessageStateReducer,\n  typingIndicators: TypingIndicatorStateReducer,\n  authentication: AuthenticationStateReducer,\n  currentConversation: currentConversationStateReducer\n});\nexport default rootReducer;\n/**\n * RootState describes the shape of the global Redux store in this application\n */","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/main/rootReducer.ts"],"names":["combineReducers","currentConversationStateReducer","LayoutStateReducer","UsersReducer","AuthenticationStateReducer","MessageStateReducer","TypingIndicatorStateReducer","conversationStateReducer","JoinedConversationsStateReducer","ConversationDraftStateReducer","ConversationMembersStateReducer","NetworkStatusReducer","MemberPresenceReducer","rootReducer","layout","networkStatus","users","conversations","joinedConversations","drafts","conversationMembers","memberPresence","messages","typingIndicators","authentication","currentConversation"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,+BAAT,QAAgD,uDAAhD;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,0BAAT,QAA2C,6CAA3C;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,2BAAT,QAA4C,+CAA5C;AACA,SAASC,wBAAT,QAAyC,0CAAzC;AACA,SAASC,+BAAT,QAAgD,sDAAhD;AACA,SAASC,6BAAT,QAA8C,0CAA9C;AACA,SAASC,+BAAT,QAAgD,sDAAhD;AACA,SAASC,oBAAT,QAAqC,yCAArC;AACA,SAASC,qBAAT,QAAsC,6CAAtC;AAEA;;;;AAGA,MAAMC,WAAW,GAAGb,eAAe,CAAC;AAClCc,EAAAA,MAAM,EAAEZ,kBAD0B;AAElCa,EAAAA,aAAa,EAAEJ,oBAFmB;AAGlCK,EAAAA,KAAK,EAAEb,YAH2B;AAIlCc,EAAAA,aAAa,EAAEV,wBAJmB;AAKlCW,EAAAA,mBAAmB,EAAEV,+BALa;AAMlCW,EAAAA,MAAM,EAAEV,6BAN0B;AAOlCW,EAAAA,mBAAmB,EAAEV,+BAPa;AAQlCW,EAAAA,cAAc,EAAET,qBARkB;AASlCU,EAAAA,QAAQ,EAAEjB,mBATwB;AAUlCkB,EAAAA,gBAAgB,EAAEjB,2BAVgB;AAWlCkB,EAAAA,cAAc,EAAEpB,0BAXkB;AAYlCqB,EAAAA,mBAAmB,EAAExB;AAZa,CAAD,CAAnC;AAeA,eAAeY,WAAf;AAEA","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport { currentConversationStateReducer } from \"features/currentConversation/currentConversationModel\";\nimport { LayoutStateReducer } from \"features/layout/LayoutReducer\";\nimport { UsersReducer } from \"features/users/userModel\";\nimport { AuthenticationStateReducer } from \"features/authentication/authenticationModel\";\nimport { MessageStateReducer } from \"features/messages/messageModel\";\nimport { TypingIndicatorStateReducer } from \"features/typingIndicator/typingIndicatorModel\";\nimport { conversationStateReducer } from \"features/conversations/conversationModel\";\nimport { JoinedConversationsStateReducer } from \"features/joinedConversations/joinedConversationModel\";\nimport { ConversationDraftStateReducer } from \"features/joinedConversations/DraftsModel\";\nimport { ConversationMembersStateReducer } from \"features/conversationMembers/conversationMemberModel\";\nimport { NetworkStatusReducer } from \"features/currentUser/networkStatusModel\";\nimport { MemberPresenceReducer } from \"features/memberPresence/memberPresenceModel\";\n\n/**\n * Combine all of the reducers in this application\n */\nconst rootReducer = combineReducers({\n  layout: LayoutStateReducer,\n  networkStatus: NetworkStatusReducer,\n  users: UsersReducer,\n  conversations: conversationStateReducer,\n  joinedConversations: JoinedConversationsStateReducer,\n  drafts: ConversationDraftStateReducer,\n  conversationMembers: ConversationMembersStateReducer,\n  memberPresence: MemberPresenceReducer,\n  messages: MessageStateReducer,\n  typingIndicators: TypingIndicatorStateReducer,\n  authentication: AuthenticationStateReducer,\n  currentConversation: currentConversationStateReducer\n});\n\nexport default rootReducer;\n\n/**\n * RootState describes the shape of the global Redux store in this application\n */\nexport type RootState = Readonly<ReturnType<typeof rootReducer>>;\n"]},"metadata":{},"sourceType":"module"}