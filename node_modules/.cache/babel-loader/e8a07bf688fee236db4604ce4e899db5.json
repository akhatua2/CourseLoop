{"ast":null,"code":"import invariant from \"invariant\";\nimport { MessageType } from \"./messageModel\";\n/**\n * We define a draft text message to to be identical to a finalized text message.\n *\n * This does not have to be the case for complext message types.  some fields might\n * be optional in the draft but required in the final version for example.\n */\n\n/**\n * Test if a draft message been modified (used to ignore unmodified drafts).\n */\nexport const isDraftModified = message => {\n  switch (message.type) {\n    case MessageType.Text:\n      return message.text !== \"\";\n\n    default:\n      invariant(false, `Cannot determine if message of type \"${message.type}\" has been modified.`);\n  }\n};","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/messages/draft.ts"],"names":["invariant","MessageType","isDraftModified","message","type","Text","text"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,WAAT,QAAuD,gBAAvD;AAEA;;;;;;;AAsBA;;;AAGA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAA2B;AACxD,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKH,WAAW,CAACI,IAAjB;AACE,aAAOF,OAAO,CAACG,IAAR,KAAiB,EAAxB;;AACF;AACEN,MAAAA,SAAS,CACP,KADO,EAEN,wCAAuCG,OAAO,CAACC,IAAK,sBAF9C,CAAT;AAJJ;AASD,CAVM","sourcesContent":["import invariant from \"invariant\";\nimport { MessageType, TextMessage, GiphyMessage } from \"./messageModel\";\n\n/**\n * We define a draft text message to to be identical to a finalized text message.\n *\n * This does not have to be the case for complext message types.  some fields might\n * be optional in the draft but required in the final version for example.\n */\nexport type DraftTextMessage = TextMessage;\n\nexport type DraftGiphyMessage = GiphyMessage;\n\n/**\n * This is a union of all draft message types defined by the application.\n *\n * This can differ from the final version of the\n * message in that fields might be missing or temporary editor state may be\n * included.\n *\n * we don't do any of those things in this example, but having a separate type\n * helps to clarify which parts of the code are working with unsent messages.\n */\nexport type DraftMessage = DraftTextMessage | DraftGiphyMessage;\n\n/**\n * Test if a draft message been modified (used to ignore unmodified drafts).\n */\nexport const isDraftModified = (message: DraftMessage) => {\n  switch (message.type) {\n    case MessageType.Text:\n      return message.text !== \"\";\n    default:\n      invariant(\n        false,\n        `Cannot determine if message of type \"${message.type}\" has been modified.`\n      );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}