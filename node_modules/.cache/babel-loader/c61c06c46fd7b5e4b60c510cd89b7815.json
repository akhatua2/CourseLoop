{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport { createMessageReducer } from \"pubnub-redux\";\nimport { AppMessage } from \"sharedTypes/messageModel\";\nexport { MessageType } from \"sharedTypes/messageModel\";\n\n/**\n * create a reducer which holds all known messsage envelope objects in a normalized form\n */\nexport const MessageStateReducer = createMessageReducer();\n/**\n * THis Slice selector is used internally to access the state of the reducer,\n * primarily as the base selector function for creating other selectors.\n */\n\nconst getMessagesSlice = state => state.messages;\n/**\n * Returns an index which can be used to find user objects\n */\n\n\nexport const getMessagesById = createSelector([getMessagesSlice], messages => {\n  return messages.byId;\n});","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/features/messages/messageModel.ts"],"names":["createSelector","createMessageReducer","AppMessage","MessageType","MessageStateReducer","getMessagesSlice","state","messages","getMessagesById","byId"],"mappings":"AACA,SAASA,cAAT,QAA+B,UAA/B;AACA,SACEC,oBADF,QAGO,cAHP;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAaA;;;AAGA,OAAO,MAAMC,mBAAmB,GAAGH,oBAAoB,EAAhD;AAEP;;;;;AAIA,MAAMI,gBAAgB,GAAIC,KAAD,IAAqBA,KAAK,CAACC,QAApD;AAEA;;;;;AAGA,OAAO,MAAMC,eAAe,GAAGR,cAAc,CAC3C,CAACK,gBAAD,CAD2C,EAE1CE,QAAD,IAAc;AACZ,SAAOA,QAAQ,CAACE,IAAhB;AACD,CAJ0C,CAAtC","sourcesContent":["import { AppState } from \"main/storeTypes\";\nimport { createSelector } from \"reselect\";\nimport {\n  createMessageReducer,\n  Message as PubNubMessageEnvelope,\n} from \"pubnub-redux\";\nimport { AppMessage } from \"sharedTypes/messageModel\";\nexport { MessageType } from \"sharedTypes/messageModel\";\nexport type {\n  AppMessage,\n  TextMessage,\n  GiphyMessage,\n} from \"sharedTypes/messageModel\";\n\nexport type MessageEnvelope = Required<\n  Pick<PubNubMessageEnvelope, \"channel\" | \"message\" | \"timetoken\">\n> & {\n  message: AppMessage;\n};\n\n/**\n * create a reducer which holds all known messsage envelope objects in a normalized form\n */\nexport const MessageStateReducer = createMessageReducer<MessageEnvelope>();\n\n/**\n * THis Slice selector is used internally to access the state of the reducer,\n * primarily as the base selector function for creating other selectors.\n */\nconst getMessagesSlice = (state: AppState) => state.messages;\n\n/**\n * Returns an index which can be used to find user objects\n */\nexport const getMessagesById = createSelector(\n  [getMessagesSlice],\n  (messages) => {\n    return messages.byId;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}