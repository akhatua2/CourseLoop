{"ast":null,"code":"var _jsxFileName = \"/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/authentication/Login/Login.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { useDispatch } from \"main/useDispatch\";\nimport { Wrapper, Button, Promo, TagLine, Screenshot, Content, LoginForm, Logo, Label, Field, Body } from \"./Login.style\";\nimport logo from \"./logo.svg\";\nimport { login } from \"../loginCommand\";\nimport { isLoggingIn } from \"../authenticationModel\";\nimport { isUserLoggedIn } from \"features/authentication/authenticationModel\";\nimport { useSelector } from \"react-redux\";\nimport KnownIds from \"config/knownUserIds.json\";\nimport screenshot from \"./screenshot.png\";\nimport { getUsersById } from \"features/users/userModel\";\nimport { ThemeContext } from \"styled-components\";\n\nconst Login = () => {\n  var _user$name;\n\n  const dispatch = useDispatch();\n  const loggingIn = useSelector(isLoggingIn);\n  const loggedIn = useSelector(isUserLoggedIn);\n  const theme = useContext(ThemeContext); // show the username in the email field\n\n  const usersById = useSelector(getUsersById);\n  const [userId, setUserId] = useState(\"\");\n  const user = usersById[userId];\n\n  const loginWithRandomlyPickedUser = () => {\n    if (loggingIn || loggedIn || userId !== \"\") {\n      return;\n    }\n\n    const randomUserId = KnownIds[Math.floor(Math.random() * KnownIds.length)];\n    setUserId(randomUserId);\n    dispatch(login(randomUserId));\n  };\n\n  if (!loggedIn && !loggingIn) {\n    loginWithRandomlyPickedUser();\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Promo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TagLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, theme.custom.tagLine), /*#__PURE__*/React.createElement(Screenshot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"pubnub chat screenshot\",\n    src: screenshot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    alt: \"PubNub\",\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n    readOnly: true,\n    value: user ? (_user$name = user.name) === null || _user$name === void 0 ? void 0 : _user$name.toLowerCase().replace(\" \", \".\") : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n    readOnly: true,\n    type: \"password\",\n    value: \"password123\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: loginWithRandomlyPickedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, loggingIn ? \"Connecting\" : \"Log In\")))));\n};\n\nexport { Login };","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/authentication/Login/Login.tsx"],"names":["React","useState","useContext","useDispatch","Wrapper","Button","Promo","TagLine","Screenshot","Content","LoginForm","Logo","Label","Field","Body","login","isLoggingIn","isUserLoggedIn","useSelector","KnownIds","screenshot","getUsersById","ThemeContext","Login","dispatch","loggingIn","loggedIn","theme","usersById","userId","setUserId","user","loginWithRandomlyPickedUser","randomUserId","Math","floor","random","length","custom","tagLine","logo","name","toLowerCase","replace"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useDispatch } from \"main/useDispatch\";\nimport {\n  Wrapper,\n  Button,\n  Promo,\n  TagLine,\n  Screenshot,\n  Content,\n  LoginForm,\n  Logo,\n  Label,\n  Field,\n  Body,\n} from \"./Login.style\";\nimport logo from \"./logo.svg\";\nimport { login } from \"../loginCommand\";\nimport { isLoggingIn } from \"../authenticationModel\";\nimport { isUserLoggedIn } from \"features/authentication/authenticationModel\";\nimport { useSelector } from \"react-redux\";\nimport KnownIds from \"config/knownUserIds.json\";\nimport screenshot from \"./screenshot.png\";\nimport { getUsersById } from \"features/users/userModel\";\nimport { ThemeContext } from \"styled-components\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const loggingIn = useSelector(isLoggingIn);\n  const loggedIn = useSelector(isUserLoggedIn);\n  const theme = useContext(ThemeContext);\n  // show the username in the email field\n  const usersById = useSelector(getUsersById);\n  const [userId, setUserId] = useState(\"\");\n  const user = usersById[userId];\n\n  const loginWithRandomlyPickedUser = () => {\n    if (loggingIn || loggedIn || userId !== \"\") {\n      return;\n    }\n    const randomUserId = KnownIds[Math.floor(Math.random() * KnownIds.length)];\n    setUserId(randomUserId);\n    dispatch(login(randomUserId));\n  };\n\n  if (!loggedIn && !loggingIn) {\n    loginWithRandomlyPickedUser();\n  }\n\n  return (\n    <Wrapper>\n      <Body>\n        <Promo>\n          <TagLine>{theme.custom.tagLine}</TagLine>\n          <Screenshot>\n            <img alt=\"pubnub chat screenshot\" src={screenshot} />\n          </Screenshot>\n        </Promo>\n        <Content>\n          <LoginForm>\n            <Logo alt=\"PubNub\" src={logo} />\n            <Label>Username</Label>\n            <Field\n              readOnly\n              value={user ? user.name?.toLowerCase().replace(\" \", \".\") : \"\"}\n            />\n            <Label>Password</Label>\n            <Field readOnly type=\"password\" value={\"password123\"} />\n            <Button onClick={loginWithRandomlyPickedUser}>\n              {loggingIn ? \"Connecting\" : \"Log In\"}\n            </Button>\n          </LoginForm>\n        </Content>\n      </Body>\n    </Wrapper>\n  );\n};\n\nexport { Login };\n"]},"metadata":{},"sourceType":"module"}