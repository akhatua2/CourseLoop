{"ast":null,"code":"var _jsxFileName = \"/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/currentUser/NetworkStatus/NetworkStatus.tsx\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { PresenceIndicatorIcon } from \"foundations/components/icons/PresenceIndicatorIcon\";\nimport { Wrapper } from \"./NetworkStatus.style\";\n\nconst NetworkStatus = ({\n  size\n}) => {\n  let isConnected = useSelector(state => state.networkStatus.isConnected);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PresenceIndicatorIcon, {\n    size: size,\n    title: isConnected ? \"connected\" : \"not connected\",\n    active: isConnected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { NetworkStatus };","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/currentUser/NetworkStatus/NetworkStatus.tsx"],"names":["React","useSelector","PresenceIndicatorIcon","Wrapper","NetworkStatus","size","isConnected","state","networkStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,qBAAT,QAAsC,oDAAtC;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAMA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkC;AACtD,MAAIC,WAAoB,GAAGL,WAAW,CACnCM,KAAD,IAAqBA,KAAK,CAACC,aAAN,CAAoBF,WADL,CAAtC;AAGA,sBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAED,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,KAAK,EAAEC,WAAW,GAAG,WAAH,GAAiB,eAFrC;AAGE,IAAA,MAAM,EAAEA,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAbD;;AAeA,SAASF,aAAT","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"main/storeTypes\";\nimport { PresenceIndicatorIcon } from \"foundations/components/icons/PresenceIndicatorIcon\";\nimport { Wrapper } from \"./NetworkStatus.style\";\n\ninterface NetworkStatusProps {\n  size: number;\n}\n\nconst NetworkStatus = ({ size }: NetworkStatusProps) => {\n  let isConnected: boolean = useSelector(\n    (state: AppState) => state.networkStatus.isConnected\n  );\n  return (\n    <Wrapper size={size}>\n      <PresenceIndicatorIcon\n        size={size}\n        title={isConnected ? \"connected\" : \"not connected\"}\n        active={isConnected}\n      />\n    </Wrapper>\n  );\n};\n\nexport { NetworkStatus };\n"]},"metadata":{},"sourceType":"module"}