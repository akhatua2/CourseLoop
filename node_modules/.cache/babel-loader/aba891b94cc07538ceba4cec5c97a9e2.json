{"ast":null,"code":"import { createSelector } from \"reselect\";\nexport const MESSAGE_DRAFT_UPDATED = \"MESSAGE_DRAFT_UPDATED\";\nexport const MESSAGE_DRAFT_DISCARDED = \"MESSAGE_DRAFT_DISCARDED\";\nconst initialState = {\n  messageDraftById: {}\n};\nexport const ConversationDraftStateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MESSAGE_DRAFT_UPDATED:\n      {\n        const messageDraftById = { ...state.messageDraftById,\n          [action.payload.conversationId]: action.payload.value\n        };\n        return { ...state,\n          messageDraftById\n        };\n      }\n\n    case MESSAGE_DRAFT_DISCARDED:\n      {\n        const {\n          [action.payload.conversationId]: discard,\n          ...messageDraftById\n        } = state.messageDraftById;\n        return { ...state,\n          messageDraftById\n        };\n      }\n  }\n\n  return state;\n};\n\nconst getDraftSlice = state => state.drafts;\n/**\n * Returns an index which can be used to find user objects\n */\n\n\nexport const getMessageDrafts = createSelector([getDraftSlice], drafts => {\n  return drafts.messageDraftById;\n});","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/joinedConversations/DraftsModel.ts"],"names":["createSelector","MESSAGE_DRAFT_UPDATED","MESSAGE_DRAFT_DISCARDED","initialState","messageDraftById","ConversationDraftStateReducer","state","action","type","payload","conversationId","value","discard","getDraftSlice","drafts","getMessageDrafts"],"mappings":"AAEA,SAASA,cAAT,QAA+B,UAA/B;AAGA,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AA0BP,MAAMC,YAAoC,GAAG;AAC3CC,EAAAA,gBAAgB,EAAE;AADyB,CAA7C;AAIA,OAAO,MAAMC,6BAA6B,GAAG,CAC3CC,KAA6B,GAAGH,YADW,EAE3CI,MAF2C,KAGhB;AAC3B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,qBAAL;AAA4B;AAC1B,cAAMG,gBAAgB,GAAG,EACvB,GAAGE,KAAK,CAACF,gBADc;AAEvB,WAACG,MAAM,CAACE,OAAP,CAAeC,cAAhB,GAAiCH,MAAM,CAACE,OAAP,CAAeE;AAFzB,SAAzB;AAIA,eAAO,EACL,GAAGL,KADE;AAELF,UAAAA;AAFK,SAAP;AAID;;AACD,SAAKF,uBAAL;AAA8B;AAC5B,cAAM;AACJ,WAACK,MAAM,CAACE,OAAP,CAAeC,cAAhB,GAAiCE,OAD7B;AAEJ,aAAGR;AAFC,YAGFE,KAAK,CAACF,gBAHV;AAIA,eAAO,EACL,GAAGE,KADE;AAELF,UAAAA;AAFK,SAAP;AAID;AApBH;;AAsBA,SAAOE,KAAP;AACD,CA3BM;;AA6BP,MAAMO,aAAa,GAAIP,KAAD,IAAqBA,KAAK,CAACQ,MAAjD;AAEA;;;;;AAGA,OAAO,MAAMC,gBAAgB,GAAGf,cAAc,CAC5C,CAACa,aAAD,CAD4C,EAE3CC,MAAD,IAAyB;AACvB,SAAOA,MAAM,CAACV,gBAAd;AACD,CAJ2C,CAAvC","sourcesContent":["import { AppState } from \"main/storeTypes\";\nimport { AppActions } from \"main/AppActions\";\nimport { createSelector } from \"reselect\";\nimport { DraftMessage } from \"features/messages/draft\";\n\nexport const MESSAGE_DRAFT_UPDATED = \"MESSAGE_DRAFT_UPDATED\";\nexport const MESSAGE_DRAFT_DISCARDED = \"MESSAGE_DRAFT_DISCARDED\";\n\nexport interface MessageDraftUpdatedAction {\n  type: typeof MESSAGE_DRAFT_UPDATED;\n  payload: {\n    conversationId: string;\n    value: DraftMessage;\n  };\n}\n\nexport interface MessageDraftDiscardedAction {\n  type: typeof MESSAGE_DRAFT_DISCARDED;\n  payload: {\n    conversationId: string;\n  };\n}\n\n/**\n * Describes a way to lookup a user from a userId\n */\nexport type DraftsIndex = { [id: string]: DraftMessage };\n\nexport interface ConversationDraftState {\n  messageDraftById: DraftsIndex;\n}\n\nconst initialState: ConversationDraftState = {\n  messageDraftById: {}\n};\n\nexport const ConversationDraftStateReducer = (\n  state: ConversationDraftState = initialState,\n  action: AppActions\n): ConversationDraftState => {\n  switch (action.type) {\n    case MESSAGE_DRAFT_UPDATED: {\n      const messageDraftById = {\n        ...state.messageDraftById,\n        [action.payload.conversationId]: action.payload.value\n      };\n      return {\n        ...state,\n        messageDraftById\n      };\n    }\n    case MESSAGE_DRAFT_DISCARDED: {\n      const {\n        [action.payload.conversationId]: discard,\n        ...messageDraftById\n      } = state.messageDraftById;\n      return {\n        ...state,\n        messageDraftById\n      };\n    }\n  }\n  return state;\n};\n\nconst getDraftSlice = (state: AppState) => state.drafts;\n\n/**\n * Returns an index which can be used to find user objects\n */\nexport const getMessageDrafts = createSelector(\n  [getDraftSlice],\n  (drafts): DraftsIndex => {\n    return drafts.messageDraftById;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}