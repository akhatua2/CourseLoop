{"ast":null,"code":"var _jsxFileName = \"/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/features/emoji/EmojiInput/EmojiInput.tsx\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport React, { useState, useCallback, useRef, useContext } from \"react\";\nimport useClickOutside from \"foundations/hooks/useClickOutside\";\nimport { Picker } from \"emoji-mart\";\nimport { FunnyEmojiIcon } from \"foundations/components/icons/FunnyEmojiIcon\";\nimport { Wrapper, Dialog, EmojiButton } from \"./EmojiInput.style\";\nimport { ThemeContext } from \"styled-components\";\n\nconst EmojiInput = ({\n  value,\n  onSelection\n}) => {\n  const [showPicker, setPickerState] = useState(false);\n  const picker = useRef(null);\n  const theme = useContext(ThemeContext);\n  const dismissPicker = useCallback(() => {\n    setPickerState(false);\n  }, [setPickerState]);\n  useClickOutside([picker], dismissPicker);\n\n  const togglePicker = () => {\n    setPickerState(!showPicker);\n  };\n\n  const addEmoji = emoji => {\n    if (\"native\" in emoji) {\n      onSelection(`${value}${emoji.native}`);\n      dismissPicker();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    ref: picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, showPicker && /*#__PURE__*/React.createElement(Picker, {\n    emoji: \"\",\n    title: \"\",\n    native: true,\n    onSelect: addEmoji,\n    darkMode: theme.custom.dark,\n    color: theme.colors.active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(EmojiButton, {\n    onClick: togglePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FunnyEmojiIcon, {\n    title: \"Open emoji selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport { EmojiInput };","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/features/emoji/EmojiInput/EmojiInput.tsx"],"names":["React","useState","useCallback","useRef","useContext","useClickOutside","Picker","FunnyEmojiIcon","Wrapper","Dialog","EmojiButton","ThemeContext","EmojiInput","value","onSelection","showPicker","setPickerState","picker","theme","dismissPicker","togglePicker","addEmoji","emoji","native","custom","dark","colors","active"],"mappings":";AAAA,OAAO,+BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,MAAT,QAAkC,YAAlC;AACA,SAASC,cAAT,QAA+B,6CAA/B;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,WAA1B,QAA6C,oBAA7C;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAOA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6C;AAC9D,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+Bf,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAMgB,MAAM,GAAGd,MAAM,CAAiB,IAAjB,CAArB;AAEA,QAAMe,KAAK,GAAGd,UAAU,CAACO,YAAD,CAAxB;AAEA,QAAMQ,aAAa,GAAGjB,WAAW,CAAC,MAAM;AACtCc,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFgC,EAE9B,CAACA,cAAD,CAF8B,CAAjC;AAIAX,EAAAA,eAAe,CAAC,CAACY,MAAD,CAAD,EAAWE,aAAX,CAAf;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzBJ,IAAAA,cAAc,CAAC,CAACD,UAAF,CAAd;AACD,GAFD;;AAIA,QAAMM,QAAQ,GAAIC,KAAD,IAAsB;AACrC,QAAI,YAAYA,KAAhB,EAAuB;AACrBR,MAAAA,WAAW,CAAE,GAAED,KAAM,GAAES,KAAK,CAACC,MAAO,EAAzB,CAAX;AACAJ,MAAAA,aAAa;AACd;AACF,GALD;;AAOA,sBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEF,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,iBACT,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,KAAK,EAAC,EAFR;AAGE,IAAA,MAAM,EAAE,IAHV;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAKE,IAAA,QAAQ,EAAEH,KAAK,CAACM,MAAN,CAAaC,IALzB;AAME,IAAA,KAAK,EAAEP,KAAK,CAACQ,MAAN,CAAaC,MANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,eAaE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEP,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF;AAmBD,CA1CD;;AA4CA,SAASR,UAAT","sourcesContent":["import \"emoji-mart/css/emoji-mart.css\";\nimport React, { useState, useCallback, useRef, useContext } from \"react\";\nimport useClickOutside from \"foundations/hooks/useClickOutside\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport { FunnyEmojiIcon } from \"foundations/components/icons/FunnyEmojiIcon\";\nimport { Wrapper, Dialog, EmojiButton } from \"./EmojiInput.style\";\nimport { ThemeContext } from \"styled-components\";\n\ninterface EmojiInputProps {\n  value: string;\n  onSelection(contentWithEmoji: string): any;\n}\n\nconst EmojiInput = ({ value, onSelection }: EmojiInputProps) => {\n  const [showPicker, setPickerState] = useState(false);\n  const picker = useRef<HTMLDivElement>(null);\n\n  const theme = useContext(ThemeContext);\n\n  const dismissPicker = useCallback(() => {\n    setPickerState(false);\n  }, [setPickerState]);\n\n  useClickOutside([picker], dismissPicker);\n\n  const togglePicker = () => {\n    setPickerState(!showPicker);\n  };\n\n  const addEmoji = (emoji: EmojiData) => {\n    if (\"native\" in emoji) {\n      onSelection(`${value}${emoji.native}`);\n      dismissPicker();\n    }\n  };\n\n  return (\n    <Wrapper ref={picker}>\n      <Dialog>\n        {showPicker && (\n          <Picker\n            emoji=\"\"\n            title=\"\"\n            native={true}\n            onSelect={addEmoji}\n            darkMode={theme.custom.dark}\n            color={theme.colors.active}\n          />\n        )}\n      </Dialog>\n      <EmojiButton onClick={togglePicker}>\n        <FunnyEmojiIcon title=\"Open emoji selector\" />\n      </EmojiButton>\n    </Wrapper>\n  );\n};\n\nexport { EmojiInput };\n"]},"metadata":{},"sourceType":"module"}