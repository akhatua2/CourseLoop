{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport function useMediaQuery(mediaQuery) {\n  // the theme provides media queries with the \"@media screen and\" prefix, which is not supported by window.matchMedia\n  const parsedQuery = (mediaQuery.match(/(\\([\\w\\s-:]+\\))/) || [])[1] || mediaQuery;\n  const mediaQueryList = window.matchMedia(parsedQuery);\n  const [value, setValue] = useState(mediaQueryList.matches);\n  useEffect(() => {\n    const mediaQueryListener = () => setValue(mediaQueryList.matches);\n\n    mediaQueryList.addListener(mediaQueryListener);\n    return () => mediaQueryList.removeListener(mediaQueryListener);\n  }, [mediaQueryList]);\n  return value;\n}","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/foundations/hooks/useMediaQuery.ts"],"names":["useEffect","useState","useMediaQuery","mediaQuery","parsedQuery","match","mediaQueryList","window","matchMedia","value","setValue","matches","mediaQueryListener","addListener","removeListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAA2C;AAChD;AACA,QAAMC,WAAW,GACf,CAACD,UAAU,CAACE,KAAX,CAAiB,iBAAjB,KAAuC,EAAxC,EAA4C,CAA5C,KAAkDF,UADpD;AAEA,QAAMG,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBJ,WAAlB,CAAvB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACK,cAAc,CAACK,OAAhB,CAAlC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,kBAAkB,GAAG,MAAMF,QAAQ,CAACJ,cAAc,CAACK,OAAhB,CAAzC;;AAEAL,IAAAA,cAAc,CAACO,WAAf,CAA2BD,kBAA3B;AAEA,WAAO,MAAMN,cAAc,CAACQ,cAAf,CAA8BF,kBAA9B,CAAb;AACD,GANQ,EAMN,CAACN,cAAD,CANM,CAAT;AAQA,SAAOG,KAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function useMediaQuery(mediaQuery: string) {\n  // the theme provides media queries with the \"@media screen and\" prefix, which is not supported by window.matchMedia\n  const parsedQuery =\n    (mediaQuery.match(/(\\([\\w\\s-:]+\\))/) || [])[1] || mediaQuery;\n  const mediaQueryList = window.matchMedia(parsedQuery);\n  const [value, setValue] = useState(mediaQueryList.matches);\n\n  useEffect(() => {\n    const mediaQueryListener = () => setValue(mediaQueryList.matches);\n\n    mediaQueryList.addListener(mediaQueryListener);\n\n    return () => mediaQueryList.removeListener(mediaQueryListener);\n  }, [mediaQueryList]);\n\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}