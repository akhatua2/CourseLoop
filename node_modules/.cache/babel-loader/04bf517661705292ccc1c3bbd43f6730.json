{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport DefaultConversation from \"config/defaultConversation.json\";\nexport const FOCUS_ON_CONVERSATION = \"FOCUS_ON_CONVERSATION\";\nexport const DEFAULT_CONVERSATION = DefaultConversation.conversationId;\nexport const focusOnConversation = target => {\n  return {\n    type: FOCUS_ON_CONVERSATION,\n    payload: target\n  };\n};\nconst initialState = {\n  currentConversationId: DEFAULT_CONVERSATION\n};\n\nconst currentConversationStateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOCUS_ON_CONVERSATION:\n      return { ...state,\n        currentConversationId: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { currentConversationStateReducer };\n\nconst getCurrentConversationSlice = state => state.currentConversation;\n\nexport const getCurrentConversationId = createSelector([getCurrentConversationSlice], currentConversation => {\n  return currentConversation.currentConversationId;\n});","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/features/currentConversation/currentConversationModel.ts"],"names":["createSelector","DefaultConversation","FOCUS_ON_CONVERSATION","DEFAULT_CONVERSATION","conversationId","focusOnConversation","target","type","payload","initialState","currentConversationId","currentConversationStateReducer","state","action","getCurrentConversationSlice","currentConversation","getCurrentConversationId"],"mappings":"AAEA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,oBAAoB,GAAGF,mBAAmB,CAACG,cAAjD;AAOP,OAAO,MAAMC,mBAAmB,GAC9BC,MADiC,IAEH;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEL,qBADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CAPM;AAaP,MAAMG,YAAsC,GAAG;AAC7CC,EAAAA,qBAAqB,EAAEP;AADsB,CAA/C;;AAIA,MAAMQ,+BAA+B,GAAG,CACtCC,KAA+B,GAAGH,YADI,EAEtCI,MAFsC,KAGT;AAC7B,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKL,qBAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYF,QAAAA,qBAAqB,EAAEG,MAAM,CAACL;AAA1C,OAAP;;AACF;AACE,aAAOI,KAAP;AAJJ;AAMD,CAVD;;AAYA,SAASD,+BAAT;;AAEA,MAAMG,2BAA2B,GAAIF,KAAD,IAClCA,KAAK,CAACG,mBADR;;AAGA,OAAO,MAAMC,wBAAwB,GAAGhB,cAAc,CACpD,CAACc,2BAAD,CADoD,EAEnDC,mBAAD,IAA2D;AACzD,SAAOA,mBAAmB,CAACL,qBAA3B;AACD,CAJmD,CAA/C","sourcesContent":["import { AppState } from \"main/storeTypes\";\nimport { AppActions } from \"main/AppActions\";\nimport { createSelector } from \"reselect\";\nimport DefaultConversation from \"config/defaultConversation.json\";\n\nexport const FOCUS_ON_CONVERSATION = \"FOCUS_ON_CONVERSATION\";\n\nexport const DEFAULT_CONVERSATION = DefaultConversation.conversationId;\n\nexport interface focusOnConversationAction {\n  type: typeof FOCUS_ON_CONVERSATION;\n  payload: string;\n}\n\nexport const focusOnConversation = (\n  target: string\n): focusOnConversationAction => {\n  return {\n    type: FOCUS_ON_CONVERSATION,\n    payload: target\n  };\n};\n\nexport interface CurrentConversationState {\n  currentConversationId: string;\n}\n\nconst initialState: CurrentConversationState = {\n  currentConversationId: DEFAULT_CONVERSATION\n};\n\nconst currentConversationStateReducer = (\n  state: CurrentConversationState = initialState,\n  action: AppActions\n): CurrentConversationState => {\n  switch (action.type) {\n    case FOCUS_ON_CONVERSATION:\n      return { ...state, currentConversationId: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport { currentConversationStateReducer };\n\nconst getCurrentConversationSlice = (state: AppState) =>\n  state.currentConversation;\n\nexport const getCurrentConversationId = createSelector(\n  [getCurrentConversationSlice],\n  (currentConversation: CurrentConversationState): string => {\n    return currentConversation.currentConversationId;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}