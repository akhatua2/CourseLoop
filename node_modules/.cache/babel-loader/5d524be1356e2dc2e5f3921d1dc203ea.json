{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\nimport preloadedState from \"./preloadedState\"; // Setup Redux Dev Tools\n\nexport const composeEnhancers = process.env.NODE_ENV === \"development\" && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Note: we do not attempt to make the proper types by passing\n// types to the parameters of createStore.  The type definitions there are tricky\n// to work with and possibly buggy as of Redux 4.0.4.\n// Instead, we create a definition of the final store we want and declare the\n// CreateAppStore to return that type of store.\n\n/**\n * Create a redux store configured for this application\n */\n\nexport const createAppStore = thunkContext => {\n  const storeEnhancer = composeEnhancers(applyMiddleware(ReduxThunk.withExtraArgument(thunkContext)));\n  return createStore(rootReducer, preloadedState, storeEnhancer);\n};","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/chatcat/typescript-ref-app-team-chat/src/main/store.ts"],"names":["createStore","applyMiddleware","compose","ReduxThunk","rootReducer","preloadedState","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createAppStore","thunkContext","storeEnhancer","withExtraArgument"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAC1BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IACCC,MADD,IAEEA,MAAD,CAAgBC,oCAFlB,IAGAT,OAJK,C,CAMP;AACA;AACA;AACA;AACA;;AAEA;;;;AAGA,OAAO,MAAMU,cAAc,GAAIC,YAAD,IAA6C;AACzE,QAAMC,aAAa,GAAGR,gBAAgB,CACpCL,eAAe,CAACE,UAAU,CAACY,iBAAX,CAA6BF,YAA7B,CAAD,CADqB,CAAtC;AAIA,SAAOb,WAAW,CAACI,WAAD,EAAcC,cAAd,EAA8BS,aAA9B,CAAlB;AACD,CANM","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\nimport { AppStore, AppThunkContext } from \"./storeTypes\";\nimport preloadedState from \"./preloadedState\";\n\n// Setup Redux Dev Tools\nexport const composeEnhancers =\n  (process.env.NODE_ENV === \"development\" &&\n    window &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\n// Note: we do not attempt to make the proper types by passing\n// types to the parameters of createStore.  The type definitions there are tricky\n// to work with and possibly buggy as of Redux 4.0.4.\n// Instead, we create a definition of the final store we want and declare the\n// CreateAppStore to return that type of store.\n\n/**\n * Create a redux store configured for this application\n */\nexport const createAppStore = (thunkContext: AppThunkContext): AppStore => {\n  const storeEnhancer = composeEnhancers(\n    applyMiddleware(ReduxThunk.withExtraArgument(thunkContext))\n  );\n\n  return createStore(rootReducer, preloadedState, storeEnhancer);\n};\n"]},"metadata":{},"sourceType":"module"}