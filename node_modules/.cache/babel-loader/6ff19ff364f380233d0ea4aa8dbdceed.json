{"ast":null,"code":"var _jsxFileName = \"/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/messages/ImageAttachmentDisplay/ImageAttachmentDisplay.tsx\";\nimport React from \"react\";\nimport { Wrapper, Media } from \"./ImageAttachmentDisplay.style\";\n\n/**\n * Display a ImageAttachment such as it would appear in a list of attachments\n */\nexport const ImageAttachmentDisplay = ({\n  attachment\n}) => {\n  var _attachment$image;\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, ((_attachment$image = attachment.image) === null || _attachment$image === void 0 ? void 0 : _attachment$image.source) && /*#__PURE__*/React.createElement(Media, {\n    alt: `media from ${attachment.image.source}`,\n    src: attachment.image.source,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/sidrajaram/Desktop/hackillinois/Course_Loop/src/features/messages/ImageAttachmentDisplay/ImageAttachmentDisplay.tsx"],"names":["React","Wrapper","Media","ImageAttachmentDisplay","attachment","image","source"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,gCAA/B;;AAOA;;;AAGA,OAAO,MAAMC,sBAAsB,GAAG,CAAC;AACrCC,EAAAA;AADqC,CAAD,KAEV;AAAA;;AAC1B,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,sBAAAA,UAAU,CAACC,KAAX,wEAAkBC,MAAlB,kBACC,oBAAC,KAAD;AACE,IAAA,GAAG,EAAG,cAAaF,UAAU,CAACC,KAAX,CAAiBC,MAAO,EAD7C;AAEE,IAAA,GAAG,EAAEF,UAAU,CAACC,KAAX,CAAiBC,MAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAUD,CAbM","sourcesContent":["import React from \"react\";\nimport { Wrapper, Media } from \"./ImageAttachmentDisplay.style\";\nimport { ImageAttachment } from \"sharedTypes/messageModel\";\n\ntype ImageAttachmentProps = {\n  attachment: ImageAttachment;\n};\n\n/**\n * Display a ImageAttachment such as it would appear in a list of attachments\n */\nexport const ImageAttachmentDisplay = ({\n  attachment,\n}: ImageAttachmentProps) => {\n  return (\n    <Wrapper>\n      {attachment.image?.source && (\n        <Media\n          alt={`media from ${attachment.image.source}`}\n          src={attachment.image.source}\n        />\n      )}\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}