/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { ErrorFetchingAllUserDataAction, AllUserDataRetrievedAction, FetchingAllUserDataAction, FetchAllUserDataError, FetchAllUserDataSuccess } from '../UserDataActions';
import { UserDataActionType } from '../UserDataActionType.enum';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const fetchingAllUserData: <Meta extends ActionMeta>(payload: import("pubnub").GetAllMetadataParameters, meta?: Meta | undefined) => FetchingAllUserDataAction<Meta>;
export declare const allUserDataRetrieved: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: FetchAllUserDataSuccess<UserCustom>, meta?: Meta | undefined) => AllUserDataRetrievedAction<UserCustom, Meta>;
export declare const errorFetchingAllUserData: <Meta extends ActionMeta = AnyMeta>(payload: FetchAllUserDataError, meta?: Meta | undefined) => ErrorFetchingAllUserDataAction<Meta>;
export declare const fetchAllUserData: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request?: import("pubnub").GetAllMetadataParameters, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<AllUserDataRetrievedAction<UserCustom, Meta>>;
    type: UserDataActionType;
};
