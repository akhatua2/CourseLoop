/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { SettingUserDataAction, UserDataSetAction, ErrorSettingUserDataAction, UserDataError, UserDataSuccess, SetUserDataRequest } from '../UserDataActions';
import { UserDataActionType } from '../UserDataActionType.enum';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const settingUserData: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: SetUserDataRequest<UserCustom>, meta?: Meta | undefined) => SettingUserDataAction<Meta>;
export declare const UserDataSet: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: UserDataSuccess<UserCustom>, meta?: Meta | undefined) => UserDataSetAction<UserCustom, Meta>;
export declare const errorSettingUserData: <Meta extends ActionMeta>(payload: UserDataError, meta?: Meta | undefined) => ErrorSettingUserDataAction<Meta>;
export declare const setUserData: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request: SetUserDataRequest<UserCustom>, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<UserDataSetAction<UserCustom, Meta>>;
    type: UserDataActionType;
};
