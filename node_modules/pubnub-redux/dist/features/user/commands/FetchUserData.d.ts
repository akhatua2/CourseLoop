/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { UserDataActionType } from '../UserDataActionType.enum';
import { ErrorFetchingUserDataAction, UserDataRetrievedAction, FetchingUserDataAction, FetchUserDataError, FetchUserDataSuccess, FetchUserDataRequest } from '../UserDataActions';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const fetchingUserData: <Meta extends ActionMeta>(payload: FetchUserDataRequest, meta?: Meta | undefined) => FetchingUserDataAction<Meta>;
export declare const UserDataRetrieved: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: FetchUserDataSuccess<UserCustom>, meta?: Meta | undefined) => UserDataRetrievedAction<UserCustom, Meta>;
export declare const errorFetchingUserData: <Meta extends ActionMeta>(payload: FetchUserDataError, meta?: Meta | undefined) => ErrorFetchingUserDataAction<Meta>;
export declare const fetchUserData: <UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request: FetchUserDataRequest, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<UserDataRetrievedAction<UserCustom, Meta>>;
    type: UserDataActionType;
};
