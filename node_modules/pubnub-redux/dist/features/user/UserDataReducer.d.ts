/// <reference types="pubnub" />
import { AnyAction } from 'redux';
import { UserDataActions, UserDataListenerActions, UserData } from './UserDataActions';
import { ChannelMembersActions } from 'features/members/ChannelMembersActions';
import { MembershipActions } from 'features/membership/MembershipActions';
import { AnyMeta } from 'foundations/ActionMeta';
import { ObjectsCustom } from 'foundations/ObjectsCustom';
export interface UserDataByIdState<UserDataType extends UserData> {
    byId: {
        [uuid: string]: UserDataType;
    };
}
declare type UserDataReducerActions<UserCustom extends ObjectsCustom, MembershipCustom extends ObjectsCustom> = UserDataActions<UserCustom, AnyMeta> | UserDataListenerActions<UserCustom> | ChannelMembersActions<UserCustom, MembershipCustom, AnyMeta> | MembershipActions<UserCustom, MembershipCustom, AnyMeta>;
export declare type UserDataReducer<UserDataType extends UserData, UserDataAction extends AnyAction> = (state: UserDataByIdState<UserDataType> | undefined, action: UserDataAction) => UserDataByIdState<UserDataType>;
export declare const createUserDataReducer: <UserDataType extends UserData<import("pubnub").ObjectCustom> = UserData<import("pubnub").ObjectCustom>, MembershipCustom extends import("pubnub").ObjectCustom = import("pubnub").ObjectCustom, UserDataAction extends AnyAction = UserDataReducerActions<NonNullable<UserDataType["custom"]>, MembershipCustom>>() => UserDataReducer<UserDataType, UserDataAction>;
export {};
