/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { ChannelDataActionType } from '../ChannelDataActionType.enum';
import { ErrorFetchingChannelDataAction, ChannelDataRetrievedAction, FetchingChannelDataAction, FetchChannelDataError, FetchChannelDataSuccess } from '../ChannelDataActions';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const fetchingChannelData: <Meta extends ActionMeta>(payload: import("pubnub").GetChannelMetadataParameters, meta?: Meta | undefined) => FetchingChannelDataAction<Meta>;
export declare const channelDataRetrieved: <ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: FetchChannelDataSuccess<ChannelCustom>, meta?: Meta | undefined) => ChannelDataRetrievedAction<ChannelCustom, Meta>;
export declare const errorFetchingChannelData: <Meta extends ActionMeta>(payload: FetchChannelDataError, meta?: Meta | undefined) => ErrorFetchingChannelDataAction<Meta>;
export declare const fetchChannelData: <ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request: import("pubnub").GetChannelMetadataParameters, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<ChannelDataRetrievedAction<ChannelCustom, Meta>>;
    type: ChannelDataActionType;
};
