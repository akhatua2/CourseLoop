/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { ErrorFetchingAllChannelDataAction, AllChannelDataRetrievedAction, FetchingAllChannelDataAction, FetchAllChannelDataError, FetchAllChannelDataSuccess } from '../ChannelDataActions';
import { ChannelDataActionType } from '../ChannelDataActionType.enum';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const fetchingAllChannelData: <Meta extends ActionMeta>(payload: import("pubnub").GetAllMetadataParameters, meta?: Meta | undefined) => FetchingAllChannelDataAction<Meta>;
export declare const allChannelDataRetrieved: <ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: FetchAllChannelDataSuccess<ChannelCustom>, meta?: Meta | undefined) => AllChannelDataRetrievedAction<ChannelCustom, Meta>;
export declare const errorFetchingAllChannelData: <Meta extends ActionMeta>(payload: FetchAllChannelDataError, meta?: Meta | undefined) => ErrorFetchingAllChannelDataAction<Meta>;
export declare const fetchAllChannelData: <ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request?: import("pubnub").GetAllMetadataParameters, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<AllChannelDataRetrievedAction<ChannelCustom, Meta>>;
    type: ChannelDataActionType;
};
