/// <reference types="pubnub" />
import { AnyAction } from 'redux';
import { ChannelDataActions, ChannelDataListenerActions, Channel } from './ChannelDataActions';
import { MembershipActions, MembershipsRetrievedAction } from '../membership/MembershipActions';
import { AnyMeta } from 'foundations/ActionMeta';
import { ObjectsCustom } from 'foundations/ObjectsCustom';
export declare type ChannelsByIdState<ChannelType extends Channel> = {
    byId: {
        [channelId: string]: ChannelType;
    };
};
declare type ChannelDataReducerActions<ChannelCustom extends ObjectsCustom, MembershipCustom extends ObjectsCustom> = ChannelDataActions<ChannelCustom, AnyMeta> | ChannelDataListenerActions<ChannelCustom> | MembershipsRetrievedAction<ChannelCustom, MembershipCustom, AnyMeta> | MembershipActions<ChannelCustom, MembershipCustom, AnyMeta>;
export declare type ChannelDataReducer<ChannelType extends Channel, ChannelAction extends AnyAction> = (state: ChannelsByIdState<ChannelType> | undefined, action: ChannelAction) => ChannelsByIdState<ChannelType>;
export declare const createChannelDataReducer: <ChannelType extends Channel<import("pubnub").ObjectCustom> = Channel<import("pubnub").ObjectCustom>, MembershipCustom extends import("pubnub").ObjectCustom = import("pubnub").ObjectCustom, ChannelAction extends AnyAction = ChannelDataReducerActions<NonNullable<ChannelType["custom"]>, MembershipCustom>>() => ChannelDataReducer<ChannelType, ChannelAction>;
export {};
