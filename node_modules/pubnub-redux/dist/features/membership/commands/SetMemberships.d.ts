/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { SettingMembershipsAction, MembershipsSetAction, SetMembershipsSuccess, ErrorSettingMembershipsAction, SetMembershipsError, SetMembershipsRequest } from '../MembershipActions';
import { MembershipActionType } from '../MembershipActionType.enum';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const settingMemberships: <ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: SetMembershipsRequest<ChannelCustom>, meta?: Meta | undefined) => SettingMembershipsAction<ChannelCustom, Meta>;
export declare const membershipsSet: <MembershipCustom extends import("pubnub").ObjectCustom, ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: SetMembershipsSuccess<MembershipCustom, ChannelCustom>, meta?: Meta | undefined) => MembershipsSetAction<MembershipCustom, ChannelCustom, Meta>;
export declare const errorSettingMemberships: <ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: SetMembershipsError<ChannelCustom>, meta?: Meta | undefined) => ErrorSettingMembershipsAction<ChannelCustom, Meta>;
export declare const setMemberships: <MembershipCustom extends import("pubnub").ObjectCustom, ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request: SetMembershipsRequest<ChannelCustom>, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<MembershipsSetAction<MembershipCustom, ChannelCustom, Meta>>;
    type: MembershipActionType;
};
