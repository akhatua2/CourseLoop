/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { FetchingMembershipsAction, MembershipsRetrievedAction, FetchMembershipsSuccess, ErrorFetchingMembershipsAction, FetchMembershipsError, FetchMembershipsRequest } from '../MembershipActions';
import { MembershipActionType } from '../MembershipActionType.enum';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const fetchingMemberships: <Meta extends ActionMeta>(payload: FetchMembershipsRequest, meta?: Meta | undefined) => FetchingMembershipsAction<Meta>;
export declare const membershipsRetrieved: <MembershipCustom extends import("pubnub").ObjectCustom, ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: FetchMembershipsSuccess<MembershipCustom, ChannelCustom>, meta?: Meta | undefined) => MembershipsRetrievedAction<MembershipCustom, ChannelCustom, Meta>;
export declare const errorFetchingMemberships: <Meta extends ActionMeta>(payload: FetchMembershipsError, meta?: Meta | undefined) => ErrorFetchingMembershipsAction<Meta>;
export declare const fetchMemberships: <MembershipCustom extends import("pubnub").ObjectCustom, ChannelCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request: FetchMembershipsRequest, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<MembershipsRetrievedAction<MembershipCustom, ChannelCustom, Meta>>;
    type: MembershipActionType;
};
