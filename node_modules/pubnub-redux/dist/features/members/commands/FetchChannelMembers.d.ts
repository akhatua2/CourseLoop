/// <reference types="pubnub" />
import { Dispatch } from 'redux';
import { ChannelMembersRetrievedAction, ErrorFetchingChannelMembersAction, FetchingChannelMembersAction, FetchChannelMembersError, FetchChannelMembersSuccess } from '../ChannelMembersActions';
import { ChannelMembersActionType } from '../ChannelMembersActionType.enum';
import { PubnubThunkContext } from 'foundations/ThunkTypes';
import { ActionMeta, AnyMeta } from 'foundations/ActionMeta';
export declare const fetchingChannelMembers: <Meta extends ActionMeta>(payload: import("pubnub").GetChannelMembersParameters, meta?: Meta | undefined) => FetchingChannelMembersAction<Meta>;
export declare const channelMembersRetrieved: <MembershipCustom extends import("pubnub").ObjectCustom, UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta>(payload: FetchChannelMembersSuccess<MembershipCustom, UserCustom>, meta?: Meta | undefined) => ChannelMembersRetrievedAction<MembershipCustom, UserCustom, Meta>;
export declare const errorFetchingChannelMembers: <Meta extends ActionMeta>(payload: FetchChannelMembersError, meta?: Meta | undefined) => ErrorFetchingChannelMembersAction<Meta>;
export declare const fetchChannelMembers: <MembershipCustom extends import("pubnub").ObjectCustom, UserCustom extends import("pubnub").ObjectCustom, Meta extends ActionMeta = AnyMeta>(request: import("pubnub").GetChannelMembersParameters, meta?: Meta | undefined) => {
    (dispatch: Dispatch<import("redux").AnyAction>, _getState: any, { pubnub }: PubnubThunkContext): Promise<ChannelMembersRetrievedAction<MembershipCustom, UserCustom, Meta>>;
    type: ChannelMembersActionType;
};
